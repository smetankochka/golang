Обобщённое программирование
Аннотация

Добро пожаловать на урок! На этот раз поговорим о дженериках (но не тех, которые в аптеке) и обобщённом программировании.

Nil interface

Начать стоит с уже знакомой нам темы интерфейсов.

Nil interface — это интерфейс без определенного типа. Например, пустой interface{} может принимать значения любого типа данных.

Когда вы передаёте значение в функцию через пустой интерфейс, вы теряете информацию о его типе. Чтобы узнать его, понадобится оператор .(type):

    func myFunc(a interface{}) {
        s, ok := a.(string)
        if ok {
            fmt.Printf("'%v' is a string\n", s)
        } else {
            fmt.Printf("'%v' is not a string\n", a)
        }
    }

    func main() {
        myFunc("hello")
        myFunc(42)
    }

Здесь функция myFunc принимает интерфейс a. Если a — строка, то переменная s будет содержать её значение, а у переменной ok будет значение true. Если a — не строка, то у переменной ok будет значение false.

Таким образом, .(type) помогает проверить тип аргумента, который был передан в пустой интерфейс, и выполнять с этим аргументом операции в зависимости от его типа.
