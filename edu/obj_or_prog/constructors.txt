Конструкторы

Конструкторы — это специальные методы, которые инициализируют объекты класса. Они выполняются, когда мы создаём экземпляр класса, и устанавливают начальные значения полей объекта:

using System;

public class Person
{
    public string Name;
    public int Age;

    // Конструктор с параметрами
    public Person(string name)
    {
        Name = name;
				// Устанавливаем значение по умолчанию для любого объекта
        Age = 40;
    }
}

class Program
{
    static void Main()
    {
        // Используем конструктор с параметрами
        Person person2 = new Person("Alice");

        Console.WriteLine($"Имя: {person2.Name}, Возраст: {person2.Age}");
    }
}

В Go это выглядит очень похоже:

package main

import "fmt"

type Person struct {
    Name string
    Age  int
}

// Конструктор в Go обычно возвращает новый экземпляр структуры
func NewPerson(name string) Person {
    return Person{Name: name, Age: 40}
}

func main() {
    // Используем конструктор
    person := NewPerson("Alice")

    fmt.Printf("Имя: %s, Возраст: %d\n", person.Name, person.Age)
}

А чем полезны конструкторы?

    Гарантия инициализации. Конструкторы обеспечивают правильную инициализацию объектов. Это помогает избежать ошибки из-за неопределённых значений полей.
    Документация. Конструкторы документируют, какие параметры ожидаются для инициализации объекта.
    Использование значений по умолчанию. Конструкторы предоставляют значения по умолчанию для полей. Это помогает проще создавать объекты с частичной инициализацией.

