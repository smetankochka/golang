package main

import "fmt"

func main() {
	// Начальный неотсортированный срез
	s1 := []int{64, 34, 25, 12, 22, 11, 90}

	// Выводим исходный неотсортированный срез
	fmt.Printf("Unsorted list:\t%v\n", s1)
	fmt.Println("")

	length := len(s1)

	// Внешний цикл для проходов по списку
	for i := 0; i < (length - 1); i++ {
		// Внутренний цикл для сравнения элементов и их перестановки
		// Обратите внимание, что количество сравнений уменьшается на i на каждом проходе,
		// потому что самый большой элемент «всплывает» на своё место в конце списка после каждого прохода
		for j := 0; j < ((length - 1) - i); j++ {
			// Если текущий элемент больше следующего, меняем их местами
			if s1[j] > s1[j+1] {
				s1[j], s1[j+1] = s1[j+1], s1[j]
			}
		}

		// Выводим текущее состояние среза после каждого прохода
		fmt.Printf("Sorting ...:\t%v\n", s1)
	}

	fmt.Println("")
	// Выводим отсортированный срез
	fmt.Printf("Sorted list:\t%v\n", s1)
}
